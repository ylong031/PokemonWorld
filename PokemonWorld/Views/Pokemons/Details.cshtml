@model PokemonWorld.Models.PokemonViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<h4>Pokemon</h4>
<hr />
<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Index)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Index)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Name)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.Name)
    </dd>


    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.TypeNames)
    </dt>
    <dd class="col-sm-10">

        @if (Model.TypeNames != null)
        {
            @foreach (var type in Model.TypeNames)
            {
                <div>@type</div>
            }

        }

    </dd>

    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.StatValues)
    </dt>
    <dd class="col-sm-10">

        @if (Model.StatValues != null)
        {
            @foreach (var statvalue in Model.StatValues)
            {
                <div>@statvalue.StatName : @statvalue.Value</div>

            }

        }

    </dd>

    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.GenerationName)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.GenerationName)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.IsLegendary)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.IsLegendary)
    </dd>
</dl>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
